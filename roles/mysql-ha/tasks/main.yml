---
# tasks file for mysql-ha
- name: Install dependency
  apt:
    name: "{{ packages3 }}"
    update_cache: yes
  vars:
    packages3:
    - mysql-server
    - mysql-client
    - python3-pymysql
      #- python-pymysql
    - python-dev-is-python3
    - gcc
    - python3-pip
    - python3-dev
- name: copy credentials.cnf
  template:
    src: credentials.cnf.j2
    dest: "/root/.my.cnf"
    owner: root
    group: root
    mode: 0644      
- name: copy bd1.cnf
  when: inventory_hostname in groups['db1']
  template:
    src: my.cnf.j2
    dest: "/etc/mysql/mysql.conf.d/mysqld.cnf"
    owner: root
    group: root
    mode: 0644
- name: copy db2.cnf
  when: inventory_hostname in groups['db2']
  template:
    src: my2.cnf.j2
    dest: "/etc/mysql/mysql.conf.d/mysqld.cnf"
    owner: root
    group: root
    mode: 0644
- name: Restart service mysqld, in all cases, also issue daemon-reload to pick up config changes
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: mysql
    enabled: true
- name: test mysql_secure_installation
  mysql_secure_installation:
    login_password: ''
    new_password: '{{ db_user_passwd }}' 
    user: root
    login_host: localhost
    hosts: ['localhost', '127.0.0.1', '::1', '{{  db1_ip }}', '{{ db2_ip }}', '{{ control_machine_ip }}' ]
    change_root_password: true
    remove_anonymous_user: true
    disallow_root_login_remotely: false
    remove_test_db: true
  register: mysql_secure
  
# To see detailed output
- debug:
    var: mysql_secure
- name: Create a new database with name '{{ db_name }}'
  when: inventory_hostname in groups['db2']
  community.mysql.mysql_db:
    name: '{{ db_name }}'
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock
- name: Create database user with name '{{ db_user }}' and password '{{ db_user_passwd }}' with all database privileges
  community.mysql.mysql_user:
    name: "{{ db_user }}"
    password: "{{ db_user_passwd }}"
    priv: '*.*:ALL,GRANT'
    state: present
    host: "{{ item }}"
    login_unix_socket: /run/mysqld/mysqld.sock
  with_items:
    - "localhost"
    - "10.0.3.248"
    - "10.0.3.106"
    - "10.0.3.1"
    - "%"
- name: Specify grants composed of more than one word
  community.mysql.mysql_user:
    name: "{{ db_user }}"
    password: "{{ db_user_passwd }}"
    priv: "*.*:REPLICATION CLIENT"
    host: "{{ item }}"
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock
  with_items:
    - "localhost"
    - "10.0.3.248"
    - "10.0.3.106"
    - "10.0.3.1"
    - "%"
- name: Specify grants composed of more than one word
  community.mysql.mysql_user:
    name: "{{ db_user }}"
    password: "{{ db_user_passwd }}"
    priv: "*.*:REPLICATION SLAVE"
    host: "{{ item }}"
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock
  with_items:
    - "localhost"
    - "10.0.3.248"
    - "10.0.3.106"
    - "10.0.3.1"
    - "%"
- name: slave stop
  when: inventory_hostname in groups['db2']
  community.mysql.mysql_replication:
    mode: stopreplica
    login_unix_socket: /run/mysqld/mysqld.sock
- name: replication set
  when: inventory_hostname in groups['db2']
  mysql_replication:
    mode: changeprimary
    master_host: "{{ db1_ip }}"
    master_user: "{{ db_user }}"
    master_password: "{{ db_user_passwd }}"
    master_log_file: "mysql-bin.000001"
    master_log_pos: 107
    login_unix_socket: /run/mysqld/mysqld.sock
- name: slave start
  when: inventory_hostname in groups['db2']
  mysql_replication:
    mode: startreplica
    login_unix_socket: /run/mysqld/mysqld.sock
- name: slave stop
  when: inventory_hostname in groups['db1']
  community.mysql.mysql_replication:
    mode: stopreplica
    login_unix_socket: /run/mysqld/mysqld.sock
- name: replication set
  when: inventory_hostname in groups['db1']
  mysql_replication:
    mode: changeprimary
    master_host: "{{ db2_ip }}"
    master_user: "{{ db_user }}"
    master_password: "{{ db_user_passwd }}"
    master_log_file: "mysql-bin.000001"
    master_log_pos: 107
    login_unix_socket: /run/mysqld/mysqld.sock
- name: slave start
  when: inventory_hostname in groups['db1']
  mysql_replication:
    mode: startreplica
    login_unix_socket: /run/mysqld/mysqld.sock

